<?php

/**
 * This is the model base class for the table "address_book".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AddressBook".
 *
 * Columns in table "address_book" available as properties of the model,
 * followed by relations of table "address_book" available as properties of the model.
 *
 * @property integer $address_book_id
 * @property integer $user_id
 * @property integer $type
 * @property string $postal_code
 * @property string $region
 * @property string $city
 * @property string $address
 * @property string $comment
 * @property integer $consist
 * @property string $country
 *
 * @property User $user
 */
abstract class BaseAddressBook extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'address_book';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AddressBook|AddressBooks', $n);
	}

	public static function representingColumn() {
		return 'postal_code';
	}

	public function rules() {
		return array(
			array('user_id, postal_code, region, city, address', 'required'),
			array('user_id, type, consist', 'numerical', 'integerOnly'=>true),
			array('postal_code', 'length', 'max'=>15),
			array('region, city', 'length', 'max'=>45),
			array('address, comment', 'length', 'max'=>255),
			array('country', 'length', 'max'=>50),
			array('type, comment, consist, country', 'default', 'setOnEmpty' => true, 'value' => null),
			array('address_book_id, user_id, type, postal_code, region, city, address, comment, consist, country', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'address_book_id' => Yii::t('app', 'Address Book'),
			'user_id' => null,
			'type' => Yii::t('app', 'Type'),
			'postal_code' => Yii::t('app', 'Postal Code'),
			'region' => Yii::t('app', 'Region'),
			'city' => Yii::t('app', 'City'),
			'address' => Yii::t('app', 'Address'),
			'comment' => Yii::t('app', 'Comment'),
			'consist' => Yii::t('app', 'Consist'),
			'country' => Yii::t('app', 'Country'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('address_book_id', $this->address_book_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('type', $this->type);
		$criteria->compare('postal_code', $this->postal_code, true);
		$criteria->compare('region', $this->region, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('consist', $this->consist);
		$criteria->compare('country', $this->country, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}